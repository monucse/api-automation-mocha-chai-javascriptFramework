{
  "stats": {
    "suites": 5,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2024-02-08T03:35:16.849Z",
    "end": "2024-02-08T03:35:20.206Z",
    "duration": 3357,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1e50c0ed-d7c8-47cd-aae4-7df6b61a3552",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "891a645c-c450-41cd-bc60-2c773cc0f170",
          "title": "Delete Api Request Tests",
          "fullFile": "C:\\Users\\smadhesh\\OneDrive - Cisco\\Desktop\\api-automation-mocha-chai-javascriptFramework\\Api_tests\\delete_request.js",
          "file": "\\Api_tests\\delete_request.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to delete user details",
              "fullTitle": "Delete Api Request Tests should be able to delete user details",
              "timedOut": false,
              "duration": 878,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.delete('https://reqres.in/api/users/2');\nconsole.log(' Deleted Data : ', res.data);\nexpect(res.status).equal(204);",
              "err": {},
              "uuid": "775835d3-66e2-42ca-a82d-19d145585112",
              "parentUUID": "891a645c-c450-41cd-bc60-2c773cc0f170",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "775835d3-66e2-42ca-a82d-19d145585112"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 878,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0a91efff-05a3-4752-879a-9cad02d55c27",
          "title": "GET Api Request Tests",
          "fullFile": "C:\\Users\\smadhesh\\OneDrive - Cisco\\Desktop\\api-automation-mocha-chai-javascriptFramework\\Api_tests\\get_request.js",
          "file": "\\Api_tests\\get_request.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to get user list",
              "fullTitle": "GET Api Request Tests should be able to get user list",
              "timedOut": false,
              "duration": 223,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get('https://reqres.in/api/users?page=2');\nconsole.log('Fetched Data : ', res.data);\nexpect(res.data.page).equal(2);\nexpect(res.data.per_page).equal(6)",
              "err": {},
              "uuid": "e3f8ef12-4dc3-4f0a-b31b-ac2c0071ee68",
              "parentUUID": "0a91efff-05a3-4752-879a-9cad02d55c27",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e3f8ef12-4dc3-4f0a-b31b-ac2c0071ee68"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 223,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d105b6a1-8b1d-452d-83c4-32646a9926d9",
          "title": "Patch Api Request Tests",
          "fullFile": "C:\\Users\\smadhesh\\OneDrive - Cisco\\Desktop\\api-automation-mocha-chai-javascriptFramework\\Api_tests\\patch_request.js",
          "file": "\\Api_tests\\patch_request.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to update user details using patch method and faker library",
              "fullTitle": "Patch Api Request Tests should be able to update user details using patch method and faker library",
              "timedOut": false,
              "duration": 594,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomName = faker.person.firstName();\nconst randomjobTitle = faker.person.jobTitle();\nconst res = await axios.patch('https://reqres.in/api/users/2',{\n    \"name\": randomName\n});\nconsole.log('Updated Data : ', res.data);\nexpect(res.data.name).equal(randomName);",
              "err": {},
              "uuid": "36917621-f3ab-4917-afc1-a0bc5e5c527c",
              "parentUUID": "d105b6a1-8b1d-452d-83c4-32646a9926d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "36917621-f3ab-4917-afc1-a0bc5e5c527c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 594,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "17f83c79-e0da-4f3e-87dd-f51002cf109f",
          "title": "Post Api Request Tests",
          "fullFile": "C:\\Users\\smadhesh\\OneDrive - Cisco\\Desktop\\api-automation-mocha-chai-javascriptFramework\\Api_tests\\post_request.js",
          "file": "\\Api_tests\\post_request.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to post user details",
              "fullTitle": "Post Api Request Tests should be able to post user details",
              "timedOut": false,
              "duration": 604,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.post('https://reqres.in/api/users',{\n    \"name\": \"morpheus\",\n    \"job\": \"leader\"\n});\nconsole.log('Posted Data : ', res.data);\nexpect(res.data.name).equal(\"morpheus\");\nexpect(res.data.job).equal(\"leader\")",
              "err": {},
              "uuid": "6b1325db-2593-4c4b-b6d7-9050d2fd5ebb",
              "parentUUID": "17f83c79-e0da-4f3e-87dd-f51002cf109f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be able to post user details using faker library",
              "fullTitle": "Post Api Request Tests should be able to post user details using faker library",
              "timedOut": false,
              "duration": 523,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomName = faker.person.firstName();\nconst randomjobTitle = faker.person.jobTitle();\nconst res = await axios.post('https://reqres.in/api/users',{\n    \"name\": randomName,\n    \"job\": randomjobTitle\n});\nconsole.log('Posted Data : ', res.data);\nexpect(res.data.name).equal(randomName);\nexpect(res.data.job).equal(randomjobTitle)",
              "err": {},
              "uuid": "6430cbe8-215a-4fd5-b7be-f5ee4bd2872f",
              "parentUUID": "17f83c79-e0da-4f3e-87dd-f51002cf109f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b1325db-2593-4c4b-b6d7-9050d2fd5ebb",
            "6430cbe8-215a-4fd5-b7be-f5ee4bd2872f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1127,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4c49249e-b075-45ee-88b0-ee646f9c67f5",
          "title": "Put Api Request Tests",
          "fullFile": "C:\\Users\\smadhesh\\OneDrive - Cisco\\Desktop\\api-automation-mocha-chai-javascriptFramework\\Api_tests\\put_request.js",
          "file": "\\Api_tests\\put_request.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to update user details using faker library",
              "fullTitle": "Put Api Request Tests should be able to update user details using faker library",
              "timedOut": false,
              "duration": 514,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomName = faker.person.firstName();\nconst randomjobTitle = faker.person.jobTitle();\nconst res = await axios.put('https://reqres.in/api/users/2',{\n    \"name\": randomName,\n    \"job\": randomjobTitle\n});\nconsole.log('Updated Data : ', res.data);\nexpect(res.data.name).equal(randomName);\nexpect(res.data.job).equal(randomjobTitle)",
              "err": {},
              "uuid": "5166bcf8-402d-4991-8dad-a24c6b3bc83b",
              "parentUUID": "4c49249e-b075-45ee-88b0-ee646f9c67f5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5166bcf8-402d-4991-8dad-a24c6b3bc83b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 514,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}